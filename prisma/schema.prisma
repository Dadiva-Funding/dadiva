// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider  = "postgresql"
    url       = env("POSTGRES_PRISMA_URL") // uses connection pooling
    directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}

enum DistributionType {
    quandratic_funding
}

model Round {
    id               String   @id @default(cuid())
    name             String
    image            String
    description      String?
    startsAt         DateTime
    endsAt           DateTime
    userId           String
    distributionType String
    isApproved       Boolean  @default(false)

    fundedAmount Int @default(0)

    stripeAccount String?
    currency      String

    applications Application[]

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    @@index([name])
}

model Grant {
    id            String  @id @default(cuid())
    name          String
    description   String?
    image         String
    userId        String
    stripeAccount String?
    isApproved    Boolean @default(false)

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    applications  Application[]
    contributions Contribution[]

    @@index([name])
}

enum ContributionStatus {
    pending
    success
}

model Contribution {
    id            String             @id @default(cuid())
    transferGroup String
    amount        Int
    grantId       String
    userId        String
    status        ContributionStatus @default(pending)

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    grant Grant @relation(fields: [grantId], references: [id])
}

model Application {
    id           String  @id @default(cuid())
    grantId      String
    roundId      String
    approvedById String?
    userId       String

    grant Grant @relation(fields: [grantId], references: [id])
    round Round @relation(fields: [roundId], references: [id])

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    @@unique([grantId, roundId])
}
